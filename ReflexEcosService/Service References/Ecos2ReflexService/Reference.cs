//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReflexEcos2Service.Ecos2ReflexService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReflexCase", Namespace="http://schemas.datacontract.org/2004/07/Ecos2PublicServices.DataContract")]
    [System.SerializableAttribute()]
    public partial class ReflexCase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] RelatedObjectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CaseId {
            get {
                return this.CaseIdField;
            }
            set {
                if ((this.CaseIdField.Equals(value) != true)) {
                    this.CaseIdField = value;
                    this.RaisePropertyChanged("CaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseTitle {
            get {
                return this.CaseTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseTitleField, value) != true)) {
                    this.CaseTitleField = value;
                    this.RaisePropertyChanged("CaseTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dnr {
            get {
                return this.DnrField;
            }
            set {
                if ((object.ReferenceEquals(this.DnrField, value) != true)) {
                    this.DnrField = value;
                    this.RaisePropertyChanged("Dnr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] RelatedObjects {
            get {
                return this.RelatedObjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedObjectsField, value) != true)) {
                    this.RelatedObjectsField = value;
                    this.RaisePropertyChanged("RelatedObjects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReflexOccurrence", Namespace="http://schemas.datacontract.org/2004/07/Ecos2PublicServices.DataContract")]
    [System.SerializableAttribute()]
    public partial class ReflexOccurrence : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReflexEcos2Service.Ecos2ReflexService.ReflexDocumentMetadata[] DocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasSensitiveDocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OccurenceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OccurenceTitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReflexEcos2Service.Ecos2ReflexService.ReflexDocumentMetadata[] Documents {
            get {
                return this.DocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentsField, value) != true)) {
                    this.DocumentsField = value;
                    this.RaisePropertyChanged("Documents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasSensitiveDocuments {
            get {
                return this.HasSensitiveDocumentsField;
            }
            set {
                if ((this.HasSensitiveDocumentsField.Equals(value) != true)) {
                    this.HasSensitiveDocumentsField = value;
                    this.RaisePropertyChanged("HasSensitiveDocuments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OccurenceDate {
            get {
                return this.OccurenceDateField;
            }
            set {
                if ((this.OccurenceDateField.Equals(value) != true)) {
                    this.OccurenceDateField = value;
                    this.RaisePropertyChanged("OccurenceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OccurenceTitle {
            get {
                return this.OccurenceTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.OccurenceTitleField, value) != true)) {
                    this.OccurenceTitleField = value;
                    this.RaisePropertyChanged("OccurenceTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReflexDocumentMetadata", Namespace="http://schemas.datacontract.org/2004/07/Ecos2PublicServices.DataContract")]
    [System.SerializableAttribute()]
    public partial class ReflexDocumentMetadata : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasFileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DocumentId {
            get {
                return this.DocumentIdField;
            }
            set {
                if ((this.DocumentIdField.Equals(value) != true)) {
                    this.DocumentIdField = value;
                    this.RaisePropertyChanged("DocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentTitle {
            get {
                return this.DocumentTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTitleField, value) != true)) {
                    this.DocumentTitleField = value;
                    this.RaisePropertyChanged("DocumentTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasFile {
            get {
                return this.HasFileField;
            }
            set {
                if ((this.HasFileField.Equals(value) != true)) {
                    this.HasFileField = value;
                    this.RaisePropertyChanged("HasFile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReflexFile", Namespace="http://schemas.datacontract.org/2004/07/Ecos2PublicServices.DataContract")]
    [System.SerializableAttribute()]
    public partial class ReflexFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filename {
            get {
                return this.FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameField, value) != true)) {
                    this.FilenameField = value;
                    this.RaisePropertyChanged("Filename");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Ecos2ReflexService.IReflexService")]
    public interface IReflexService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReflexService/GetEstateCases", ReplyAction="http://tempuri.org/IReflexService/GetEstateCasesResponse")]
        ReflexEcos2Service.Ecos2ReflexService.ReflexCase[] GetEstateCases(int fnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReflexService/GetEstateCases", ReplyAction="http://tempuri.org/IReflexService/GetEstateCasesResponse")]
        System.Threading.Tasks.Task<ReflexEcos2Service.Ecos2ReflexService.ReflexCase[]> GetEstateCasesAsync(int fnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReflexService/GetCaseOccurences", ReplyAction="http://tempuri.org/IReflexService/GetCaseOccurencesResponse")]
        ReflexEcos2Service.Ecos2ReflexService.ReflexOccurrence[] GetCaseOccurences(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReflexService/GetCaseOccurences", ReplyAction="http://tempuri.org/IReflexService/GetCaseOccurencesResponse")]
        System.Threading.Tasks.Task<ReflexEcos2Service.Ecos2ReflexService.ReflexOccurrence[]> GetCaseOccurencesAsync(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReflexService/GetDocumentFile", ReplyAction="http://tempuri.org/IReflexService/GetDocumentFileResponse")]
        ReflexEcos2Service.Ecos2ReflexService.ReflexFile GetDocumentFile(System.Guid documentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReflexService/GetDocumentFile", ReplyAction="http://tempuri.org/IReflexService/GetDocumentFileResponse")]
        System.Threading.Tasks.Task<ReflexEcos2Service.Ecos2ReflexService.ReflexFile> GetDocumentFileAsync(System.Guid documentId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReflexServiceChannel : ReflexEcos2Service.Ecos2ReflexService.IReflexService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReflexServiceClient : System.ServiceModel.ClientBase<ReflexEcos2Service.Ecos2ReflexService.IReflexService>, ReflexEcos2Service.Ecos2ReflexService.IReflexService {
        
        public ReflexServiceClient() {
        }
        
        public ReflexServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReflexServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReflexServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReflexServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ReflexEcos2Service.Ecos2ReflexService.ReflexCase[] GetEstateCases(int fnr) {
            return base.Channel.GetEstateCases(fnr);
        }
        
        public System.Threading.Tasks.Task<ReflexEcos2Service.Ecos2ReflexService.ReflexCase[]> GetEstateCasesAsync(int fnr) {
            return base.Channel.GetEstateCasesAsync(fnr);
        }
        
        public ReflexEcos2Service.Ecos2ReflexService.ReflexOccurrence[] GetCaseOccurences(System.Guid caseId) {
            return base.Channel.GetCaseOccurences(caseId);
        }
        
        public System.Threading.Tasks.Task<ReflexEcos2Service.Ecos2ReflexService.ReflexOccurrence[]> GetCaseOccurencesAsync(System.Guid caseId) {
            return base.Channel.GetCaseOccurencesAsync(caseId);
        }
        
        public ReflexEcos2Service.Ecos2ReflexService.ReflexFile GetDocumentFile(System.Guid documentId) {
            return base.Channel.GetDocumentFile(documentId);
        }
        
        public System.Threading.Tasks.Task<ReflexEcos2Service.Ecos2ReflexService.ReflexFile> GetDocumentFileAsync(System.Guid documentId) {
            return base.Channel.GetDocumentFileAsync(documentId);
        }
    }
}
