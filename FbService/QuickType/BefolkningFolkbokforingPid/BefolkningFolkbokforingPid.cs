// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var befolkningFolkbokforingPid = BefolkningFolkbokforingPid.FromJson(jsonString);

using Newtonsoft.Json;

namespace FbService.QuickType.BefolkningFolkbokforingPid
{
    public class BefolkningFolkbokforingPid
    {
        [JsonProperty("statusKod", NullValueHandling = NullValueHandling.Ignore)]
        public long? StatusKod { get; set; }

        [JsonProperty("statusMeddelande", NullValueHandling = NullValueHandling.Ignore)]
        public string StatusMeddelande { get; set; }

        [JsonProperty("fel", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Fel { get; set; }

        [JsonProperty("data", NullValueHandling = NullValueHandling.Ignore)]
        public Datum[] Data { get; set; }
    }

    public class Datum
    {
        [JsonProperty("pid", NullValueHandling = NullValueHandling.Ignore)]
        public int Pid { get; set; }

        [JsonProperty("identitetsnummer", NullValueHandling = NullValueHandling.Ignore)]
        public string Identitetsnummer { get; set; }

        [JsonProperty("identitetsnummertyp", NullValueHandling = NullValueHandling.Ignore)]
        public string Identitetsnummertyp { get; set; }

        [JsonProperty("kon", NullValueHandling = NullValueHandling.Ignore)]
        public string Kon { get; set; }

        [JsonProperty("civilstandskod", NullValueHandling = NullValueHandling.Ignore)]
        public string Civilstandskod { get; set; }

        [JsonProperty("civilstandsdatum", NullValueHandling = NullValueHandling.Ignore)]
        public string Civilstandsdatum { get; set; }

        [JsonProperty("folkbokforingsdatum", NullValueHandling = NullValueHandling.Ignore)]
        public string Folkbokforingsdatum { get; set; }

        [JsonProperty("avregistreringskod", NullValueHandling = NullValueHandling.Ignore)]
        public string Avregistreringskod { get; set; }

        [JsonProperty("avregistreringsdatum", NullValueHandling = NullValueHandling.Ignore)]
        public string Avregistreringsdatum { get; set; }

        [JsonProperty("efternamn", NullValueHandling = NullValueHandling.Ignore)]
        public string Efternamn { get; set; }

        [JsonProperty("mellannamn", NullValueHandling = NullValueHandling.Ignore)]
        public string Mellannamn { get; set; }

        [JsonProperty("fornamn", NullValueHandling = NullValueHandling.Ignore)]
        public string Fornamn { get; set; }

        [JsonProperty("tilltalsnamn", NullValueHandling = NullValueHandling.Ignore)]
        public string Tilltalsnamn { get; set; }

        [JsonProperty("fonetisktNamn", NullValueHandling = NullValueHandling.Ignore)]
        public string FonetisktNamn { get; set; }

        [JsonProperty("kommunkod", NullValueHandling = NullValueHandling.Ignore)]
        public string Kommunkod { get; set; }

        [JsonProperty("fodelselan", NullValueHandling = NullValueHandling.Ignore)]
        public string Fodelselan { get; set; }

        [JsonProperty("fodelsehemort", NullValueHandling = NullValueHandling.Ignore)]
        public string Fodelsehemort { get; set; }

        [JsonProperty("utlandskFodelseort", NullValueHandling = NullValueHandling.Ignore)]
        public string UtlandskFodelseort { get; set; }

        [JsonProperty("fodelseland", NullValueHandling = NullValueHandling.Ignore)]
        public string Fodelseland { get; set; }

        [JsonProperty("invandringsdatum", NullValueHandling = NullValueHandling.Ignore)]
        public string Invandringsdatum { get; set; }

        [JsonProperty("fnr", NullValueHandling = NullValueHandling.Ignore)]
        public long? Fnr { get; set; }
    }
}
